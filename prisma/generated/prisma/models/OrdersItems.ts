
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * This file exports the `OrdersItems` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums.js"
import type * as Prisma from "../internal/prismaNamespace.js"

/**
 * Model OrdersItems
 * 
 */
export type OrdersItemsModel = runtime.Types.Result.DefaultSelection<Prisma.$OrdersItemsPayload>

export type AggregateOrdersItems = {
  _count: OrdersItemsCountAggregateOutputType | null
  _avg: OrdersItemsAvgAggregateOutputType | null
  _sum: OrdersItemsSumAggregateOutputType | null
  _min: OrdersItemsMinAggregateOutputType | null
  _max: OrdersItemsMaxAggregateOutputType | null
}

export type OrdersItemsAvgAggregateOutputType = {
  id: number | null
  itemId: number | null
  orderId: number | null
  priceAtOrder: number | null
}

export type OrdersItemsSumAggregateOutputType = {
  id: number | null
  itemId: number | null
  orderId: number | null
  priceAtOrder: number | null
}

export type OrdersItemsMinAggregateOutputType = {
  id: number | null
  itemId: number | null
  orderId: number | null
  priceAtOrder: number | null
  nameAtOrder: string | null
  comment: string | null
}

export type OrdersItemsMaxAggregateOutputType = {
  id: number | null
  itemId: number | null
  orderId: number | null
  priceAtOrder: number | null
  nameAtOrder: string | null
  comment: string | null
}

export type OrdersItemsCountAggregateOutputType = {
  id: number
  itemId: number
  orderId: number
  priceAtOrder: number
  nameAtOrder: number
  comment: number
  _all: number
}


export type OrdersItemsAvgAggregateInputType = {
  id?: true
  itemId?: true
  orderId?: true
  priceAtOrder?: true
}

export type OrdersItemsSumAggregateInputType = {
  id?: true
  itemId?: true
  orderId?: true
  priceAtOrder?: true
}

export type OrdersItemsMinAggregateInputType = {
  id?: true
  itemId?: true
  orderId?: true
  priceAtOrder?: true
  nameAtOrder?: true
  comment?: true
}

export type OrdersItemsMaxAggregateInputType = {
  id?: true
  itemId?: true
  orderId?: true
  priceAtOrder?: true
  nameAtOrder?: true
  comment?: true
}

export type OrdersItemsCountAggregateInputType = {
  id?: true
  itemId?: true
  orderId?: true
  priceAtOrder?: true
  nameAtOrder?: true
  comment?: true
  _all?: true
}

export type OrdersItemsAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which OrdersItems to aggregate.
   */
  where?: Prisma.OrdersItemsWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of OrdersItems to fetch.
   */
  orderBy?: Prisma.OrdersItemsOrderByWithRelationInput | Prisma.OrdersItemsOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.OrdersItemsWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` OrdersItems from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` OrdersItems.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned OrdersItems
  **/
  _count?: true | OrdersItemsCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: OrdersItemsAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: OrdersItemsSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: OrdersItemsMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: OrdersItemsMaxAggregateInputType
}

export type GetOrdersItemsAggregateType<T extends OrdersItemsAggregateArgs> = {
      [P in keyof T & keyof AggregateOrdersItems]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateOrdersItems[P]>
    : Prisma.GetScalarType<T[P], AggregateOrdersItems[P]>
}




export type OrdersItemsGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.OrdersItemsWhereInput
  orderBy?: Prisma.OrdersItemsOrderByWithAggregationInput | Prisma.OrdersItemsOrderByWithAggregationInput[]
  by: Prisma.OrdersItemsScalarFieldEnum[] | Prisma.OrdersItemsScalarFieldEnum
  having?: Prisma.OrdersItemsScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: OrdersItemsCountAggregateInputType | true
  _avg?: OrdersItemsAvgAggregateInputType
  _sum?: OrdersItemsSumAggregateInputType
  _min?: OrdersItemsMinAggregateInputType
  _max?: OrdersItemsMaxAggregateInputType
}

export type OrdersItemsGroupByOutputType = {
  id: number
  itemId: number
  orderId: number
  priceAtOrder: number
  nameAtOrder: string
  comment: string | null
  _count: OrdersItemsCountAggregateOutputType | null
  _avg: OrdersItemsAvgAggregateOutputType | null
  _sum: OrdersItemsSumAggregateOutputType | null
  _min: OrdersItemsMinAggregateOutputType | null
  _max: OrdersItemsMaxAggregateOutputType | null
}

type GetOrdersItemsGroupByPayload<T extends OrdersItemsGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<OrdersItemsGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof OrdersItemsGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], OrdersItemsGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], OrdersItemsGroupByOutputType[P]>
      }
    >
  >



export type OrdersItemsWhereInput = {
  AND?: Prisma.OrdersItemsWhereInput | Prisma.OrdersItemsWhereInput[]
  OR?: Prisma.OrdersItemsWhereInput[]
  NOT?: Prisma.OrdersItemsWhereInput | Prisma.OrdersItemsWhereInput[]
  id?: Prisma.IntFilter<"OrdersItems"> | number
  itemId?: Prisma.IntFilter<"OrdersItems"> | number
  orderId?: Prisma.IntFilter<"OrdersItems"> | number
  priceAtOrder?: Prisma.FloatFilter<"OrdersItems"> | number
  nameAtOrder?: Prisma.StringFilter<"OrdersItems"> | string
  comment?: Prisma.StringNullableFilter<"OrdersItems"> | string | null
  item?: Prisma.XOR<Prisma.MenuItemScalarRelationFilter, Prisma.MenuItemWhereInput>
  order?: Prisma.XOR<Prisma.OrderScalarRelationFilter, Prisma.OrderWhereInput>
}

export type OrdersItemsOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  itemId?: Prisma.SortOrder
  orderId?: Prisma.SortOrder
  priceAtOrder?: Prisma.SortOrder
  nameAtOrder?: Prisma.SortOrder
  comment?: Prisma.SortOrderInput | Prisma.SortOrder
  item?: Prisma.MenuItemOrderByWithRelationInput
  order?: Prisma.OrderOrderByWithRelationInput
}

export type OrdersItemsWhereUniqueInput = Prisma.AtLeast<{
  id?: number
  AND?: Prisma.OrdersItemsWhereInput | Prisma.OrdersItemsWhereInput[]
  OR?: Prisma.OrdersItemsWhereInput[]
  NOT?: Prisma.OrdersItemsWhereInput | Prisma.OrdersItemsWhereInput[]
  itemId?: Prisma.IntFilter<"OrdersItems"> | number
  orderId?: Prisma.IntFilter<"OrdersItems"> | number
  priceAtOrder?: Prisma.FloatFilter<"OrdersItems"> | number
  nameAtOrder?: Prisma.StringFilter<"OrdersItems"> | string
  comment?: Prisma.StringNullableFilter<"OrdersItems"> | string | null
  item?: Prisma.XOR<Prisma.MenuItemScalarRelationFilter, Prisma.MenuItemWhereInput>
  order?: Prisma.XOR<Prisma.OrderScalarRelationFilter, Prisma.OrderWhereInput>
}, "id">

export type OrdersItemsOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  itemId?: Prisma.SortOrder
  orderId?: Prisma.SortOrder
  priceAtOrder?: Prisma.SortOrder
  nameAtOrder?: Prisma.SortOrder
  comment?: Prisma.SortOrderInput | Prisma.SortOrder
  _count?: Prisma.OrdersItemsCountOrderByAggregateInput
  _avg?: Prisma.OrdersItemsAvgOrderByAggregateInput
  _max?: Prisma.OrdersItemsMaxOrderByAggregateInput
  _min?: Prisma.OrdersItemsMinOrderByAggregateInput
  _sum?: Prisma.OrdersItemsSumOrderByAggregateInput
}

export type OrdersItemsScalarWhereWithAggregatesInput = {
  AND?: Prisma.OrdersItemsScalarWhereWithAggregatesInput | Prisma.OrdersItemsScalarWhereWithAggregatesInput[]
  OR?: Prisma.OrdersItemsScalarWhereWithAggregatesInput[]
  NOT?: Prisma.OrdersItemsScalarWhereWithAggregatesInput | Prisma.OrdersItemsScalarWhereWithAggregatesInput[]
  id?: Prisma.IntWithAggregatesFilter<"OrdersItems"> | number
  itemId?: Prisma.IntWithAggregatesFilter<"OrdersItems"> | number
  orderId?: Prisma.IntWithAggregatesFilter<"OrdersItems"> | number
  priceAtOrder?: Prisma.FloatWithAggregatesFilter<"OrdersItems"> | number
  nameAtOrder?: Prisma.StringWithAggregatesFilter<"OrdersItems"> | string
  comment?: Prisma.StringNullableWithAggregatesFilter<"OrdersItems"> | string | null
}

export type OrdersItemsCreateInput = {
  priceAtOrder: number
  nameAtOrder: string
  comment?: string | null
  item: Prisma.MenuItemCreateNestedOneWithoutOrdersInput
  order: Prisma.OrderCreateNestedOneWithoutOrderItemsInput
}

export type OrdersItemsUncheckedCreateInput = {
  id?: number
  itemId: number
  orderId: number
  priceAtOrder: number
  nameAtOrder: string
  comment?: string | null
}

export type OrdersItemsUpdateInput = {
  priceAtOrder?: Prisma.FloatFieldUpdateOperationsInput | number
  nameAtOrder?: Prisma.StringFieldUpdateOperationsInput | string
  comment?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  item?: Prisma.MenuItemUpdateOneRequiredWithoutOrdersNestedInput
  order?: Prisma.OrderUpdateOneRequiredWithoutOrderItemsNestedInput
}

export type OrdersItemsUncheckedUpdateInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  itemId?: Prisma.IntFieldUpdateOperationsInput | number
  orderId?: Prisma.IntFieldUpdateOperationsInput | number
  priceAtOrder?: Prisma.FloatFieldUpdateOperationsInput | number
  nameAtOrder?: Prisma.StringFieldUpdateOperationsInput | string
  comment?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
}

export type OrdersItemsCreateManyInput = {
  id?: number
  itemId: number
  orderId: number
  priceAtOrder: number
  nameAtOrder: string
  comment?: string | null
}

export type OrdersItemsUpdateManyMutationInput = {
  priceAtOrder?: Prisma.FloatFieldUpdateOperationsInput | number
  nameAtOrder?: Prisma.StringFieldUpdateOperationsInput | string
  comment?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
}

export type OrdersItemsUncheckedUpdateManyInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  itemId?: Prisma.IntFieldUpdateOperationsInput | number
  orderId?: Prisma.IntFieldUpdateOperationsInput | number
  priceAtOrder?: Prisma.FloatFieldUpdateOperationsInput | number
  nameAtOrder?: Prisma.StringFieldUpdateOperationsInput | string
  comment?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
}

export type OrdersItemsListRelationFilter = {
  every?: Prisma.OrdersItemsWhereInput
  some?: Prisma.OrdersItemsWhereInput
  none?: Prisma.OrdersItemsWhereInput
}

export type OrdersItemsOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type OrdersItemsCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  itemId?: Prisma.SortOrder
  orderId?: Prisma.SortOrder
  priceAtOrder?: Prisma.SortOrder
  nameAtOrder?: Prisma.SortOrder
  comment?: Prisma.SortOrder
}

export type OrdersItemsAvgOrderByAggregateInput = {
  id?: Prisma.SortOrder
  itemId?: Prisma.SortOrder
  orderId?: Prisma.SortOrder
  priceAtOrder?: Prisma.SortOrder
}

export type OrdersItemsMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  itemId?: Prisma.SortOrder
  orderId?: Prisma.SortOrder
  priceAtOrder?: Prisma.SortOrder
  nameAtOrder?: Prisma.SortOrder
  comment?: Prisma.SortOrder
}

export type OrdersItemsMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  itemId?: Prisma.SortOrder
  orderId?: Prisma.SortOrder
  priceAtOrder?: Prisma.SortOrder
  nameAtOrder?: Prisma.SortOrder
  comment?: Prisma.SortOrder
}

export type OrdersItemsSumOrderByAggregateInput = {
  id?: Prisma.SortOrder
  itemId?: Prisma.SortOrder
  orderId?: Prisma.SortOrder
  priceAtOrder?: Prisma.SortOrder
}

export type OrdersItemsCreateNestedManyWithoutItemInput = {
  create?: Prisma.XOR<Prisma.OrdersItemsCreateWithoutItemInput, Prisma.OrdersItemsUncheckedCreateWithoutItemInput> | Prisma.OrdersItemsCreateWithoutItemInput[] | Prisma.OrdersItemsUncheckedCreateWithoutItemInput[]
  connectOrCreate?: Prisma.OrdersItemsCreateOrConnectWithoutItemInput | Prisma.OrdersItemsCreateOrConnectWithoutItemInput[]
  createMany?: Prisma.OrdersItemsCreateManyItemInputEnvelope
  connect?: Prisma.OrdersItemsWhereUniqueInput | Prisma.OrdersItemsWhereUniqueInput[]
}

export type OrdersItemsUncheckedCreateNestedManyWithoutItemInput = {
  create?: Prisma.XOR<Prisma.OrdersItemsCreateWithoutItemInput, Prisma.OrdersItemsUncheckedCreateWithoutItemInput> | Prisma.OrdersItemsCreateWithoutItemInput[] | Prisma.OrdersItemsUncheckedCreateWithoutItemInput[]
  connectOrCreate?: Prisma.OrdersItemsCreateOrConnectWithoutItemInput | Prisma.OrdersItemsCreateOrConnectWithoutItemInput[]
  createMany?: Prisma.OrdersItemsCreateManyItemInputEnvelope
  connect?: Prisma.OrdersItemsWhereUniqueInput | Prisma.OrdersItemsWhereUniqueInput[]
}

export type OrdersItemsUpdateManyWithoutItemNestedInput = {
  create?: Prisma.XOR<Prisma.OrdersItemsCreateWithoutItemInput, Prisma.OrdersItemsUncheckedCreateWithoutItemInput> | Prisma.OrdersItemsCreateWithoutItemInput[] | Prisma.OrdersItemsUncheckedCreateWithoutItemInput[]
  connectOrCreate?: Prisma.OrdersItemsCreateOrConnectWithoutItemInput | Prisma.OrdersItemsCreateOrConnectWithoutItemInput[]
  upsert?: Prisma.OrdersItemsUpsertWithWhereUniqueWithoutItemInput | Prisma.OrdersItemsUpsertWithWhereUniqueWithoutItemInput[]
  createMany?: Prisma.OrdersItemsCreateManyItemInputEnvelope
  set?: Prisma.OrdersItemsWhereUniqueInput | Prisma.OrdersItemsWhereUniqueInput[]
  disconnect?: Prisma.OrdersItemsWhereUniqueInput | Prisma.OrdersItemsWhereUniqueInput[]
  delete?: Prisma.OrdersItemsWhereUniqueInput | Prisma.OrdersItemsWhereUniqueInput[]
  connect?: Prisma.OrdersItemsWhereUniqueInput | Prisma.OrdersItemsWhereUniqueInput[]
  update?: Prisma.OrdersItemsUpdateWithWhereUniqueWithoutItemInput | Prisma.OrdersItemsUpdateWithWhereUniqueWithoutItemInput[]
  updateMany?: Prisma.OrdersItemsUpdateManyWithWhereWithoutItemInput | Prisma.OrdersItemsUpdateManyWithWhereWithoutItemInput[]
  deleteMany?: Prisma.OrdersItemsScalarWhereInput | Prisma.OrdersItemsScalarWhereInput[]
}

export type OrdersItemsUncheckedUpdateManyWithoutItemNestedInput = {
  create?: Prisma.XOR<Prisma.OrdersItemsCreateWithoutItemInput, Prisma.OrdersItemsUncheckedCreateWithoutItemInput> | Prisma.OrdersItemsCreateWithoutItemInput[] | Prisma.OrdersItemsUncheckedCreateWithoutItemInput[]
  connectOrCreate?: Prisma.OrdersItemsCreateOrConnectWithoutItemInput | Prisma.OrdersItemsCreateOrConnectWithoutItemInput[]
  upsert?: Prisma.OrdersItemsUpsertWithWhereUniqueWithoutItemInput | Prisma.OrdersItemsUpsertWithWhereUniqueWithoutItemInput[]
  createMany?: Prisma.OrdersItemsCreateManyItemInputEnvelope
  set?: Prisma.OrdersItemsWhereUniqueInput | Prisma.OrdersItemsWhereUniqueInput[]
  disconnect?: Prisma.OrdersItemsWhereUniqueInput | Prisma.OrdersItemsWhereUniqueInput[]
  delete?: Prisma.OrdersItemsWhereUniqueInput | Prisma.OrdersItemsWhereUniqueInput[]
  connect?: Prisma.OrdersItemsWhereUniqueInput | Prisma.OrdersItemsWhereUniqueInput[]
  update?: Prisma.OrdersItemsUpdateWithWhereUniqueWithoutItemInput | Prisma.OrdersItemsUpdateWithWhereUniqueWithoutItemInput[]
  updateMany?: Prisma.OrdersItemsUpdateManyWithWhereWithoutItemInput | Prisma.OrdersItemsUpdateManyWithWhereWithoutItemInput[]
  deleteMany?: Prisma.OrdersItemsScalarWhereInput | Prisma.OrdersItemsScalarWhereInput[]
}

export type OrdersItemsCreateNestedManyWithoutOrderInput = {
  create?: Prisma.XOR<Prisma.OrdersItemsCreateWithoutOrderInput, Prisma.OrdersItemsUncheckedCreateWithoutOrderInput> | Prisma.OrdersItemsCreateWithoutOrderInput[] | Prisma.OrdersItemsUncheckedCreateWithoutOrderInput[]
  connectOrCreate?: Prisma.OrdersItemsCreateOrConnectWithoutOrderInput | Prisma.OrdersItemsCreateOrConnectWithoutOrderInput[]
  createMany?: Prisma.OrdersItemsCreateManyOrderInputEnvelope
  connect?: Prisma.OrdersItemsWhereUniqueInput | Prisma.OrdersItemsWhereUniqueInput[]
}

export type OrdersItemsUncheckedCreateNestedManyWithoutOrderInput = {
  create?: Prisma.XOR<Prisma.OrdersItemsCreateWithoutOrderInput, Prisma.OrdersItemsUncheckedCreateWithoutOrderInput> | Prisma.OrdersItemsCreateWithoutOrderInput[] | Prisma.OrdersItemsUncheckedCreateWithoutOrderInput[]
  connectOrCreate?: Prisma.OrdersItemsCreateOrConnectWithoutOrderInput | Prisma.OrdersItemsCreateOrConnectWithoutOrderInput[]
  createMany?: Prisma.OrdersItemsCreateManyOrderInputEnvelope
  connect?: Prisma.OrdersItemsWhereUniqueInput | Prisma.OrdersItemsWhereUniqueInput[]
}

export type OrdersItemsUpdateManyWithoutOrderNestedInput = {
  create?: Prisma.XOR<Prisma.OrdersItemsCreateWithoutOrderInput, Prisma.OrdersItemsUncheckedCreateWithoutOrderInput> | Prisma.OrdersItemsCreateWithoutOrderInput[] | Prisma.OrdersItemsUncheckedCreateWithoutOrderInput[]
  connectOrCreate?: Prisma.OrdersItemsCreateOrConnectWithoutOrderInput | Prisma.OrdersItemsCreateOrConnectWithoutOrderInput[]
  upsert?: Prisma.OrdersItemsUpsertWithWhereUniqueWithoutOrderInput | Prisma.OrdersItemsUpsertWithWhereUniqueWithoutOrderInput[]
  createMany?: Prisma.OrdersItemsCreateManyOrderInputEnvelope
  set?: Prisma.OrdersItemsWhereUniqueInput | Prisma.OrdersItemsWhereUniqueInput[]
  disconnect?: Prisma.OrdersItemsWhereUniqueInput | Prisma.OrdersItemsWhereUniqueInput[]
  delete?: Prisma.OrdersItemsWhereUniqueInput | Prisma.OrdersItemsWhereUniqueInput[]
  connect?: Prisma.OrdersItemsWhereUniqueInput | Prisma.OrdersItemsWhereUniqueInput[]
  update?: Prisma.OrdersItemsUpdateWithWhereUniqueWithoutOrderInput | Prisma.OrdersItemsUpdateWithWhereUniqueWithoutOrderInput[]
  updateMany?: Prisma.OrdersItemsUpdateManyWithWhereWithoutOrderInput | Prisma.OrdersItemsUpdateManyWithWhereWithoutOrderInput[]
  deleteMany?: Prisma.OrdersItemsScalarWhereInput | Prisma.OrdersItemsScalarWhereInput[]
}

export type OrdersItemsUncheckedUpdateManyWithoutOrderNestedInput = {
  create?: Prisma.XOR<Prisma.OrdersItemsCreateWithoutOrderInput, Prisma.OrdersItemsUncheckedCreateWithoutOrderInput> | Prisma.OrdersItemsCreateWithoutOrderInput[] | Prisma.OrdersItemsUncheckedCreateWithoutOrderInput[]
  connectOrCreate?: Prisma.OrdersItemsCreateOrConnectWithoutOrderInput | Prisma.OrdersItemsCreateOrConnectWithoutOrderInput[]
  upsert?: Prisma.OrdersItemsUpsertWithWhereUniqueWithoutOrderInput | Prisma.OrdersItemsUpsertWithWhereUniqueWithoutOrderInput[]
  createMany?: Prisma.OrdersItemsCreateManyOrderInputEnvelope
  set?: Prisma.OrdersItemsWhereUniqueInput | Prisma.OrdersItemsWhereUniqueInput[]
  disconnect?: Prisma.OrdersItemsWhereUniqueInput | Prisma.OrdersItemsWhereUniqueInput[]
  delete?: Prisma.OrdersItemsWhereUniqueInput | Prisma.OrdersItemsWhereUniqueInput[]
  connect?: Prisma.OrdersItemsWhereUniqueInput | Prisma.OrdersItemsWhereUniqueInput[]
  update?: Prisma.OrdersItemsUpdateWithWhereUniqueWithoutOrderInput | Prisma.OrdersItemsUpdateWithWhereUniqueWithoutOrderInput[]
  updateMany?: Prisma.OrdersItemsUpdateManyWithWhereWithoutOrderInput | Prisma.OrdersItemsUpdateManyWithWhereWithoutOrderInput[]
  deleteMany?: Prisma.OrdersItemsScalarWhereInput | Prisma.OrdersItemsScalarWhereInput[]
}

export type OrdersItemsCreateWithoutItemInput = {
  priceAtOrder: number
  nameAtOrder: string
  comment?: string | null
  order: Prisma.OrderCreateNestedOneWithoutOrderItemsInput
}

export type OrdersItemsUncheckedCreateWithoutItemInput = {
  id?: number
  orderId: number
  priceAtOrder: number
  nameAtOrder: string
  comment?: string | null
}

export type OrdersItemsCreateOrConnectWithoutItemInput = {
  where: Prisma.OrdersItemsWhereUniqueInput
  create: Prisma.XOR<Prisma.OrdersItemsCreateWithoutItemInput, Prisma.OrdersItemsUncheckedCreateWithoutItemInput>
}

export type OrdersItemsCreateManyItemInputEnvelope = {
  data: Prisma.OrdersItemsCreateManyItemInput | Prisma.OrdersItemsCreateManyItemInput[]
}

export type OrdersItemsUpsertWithWhereUniqueWithoutItemInput = {
  where: Prisma.OrdersItemsWhereUniqueInput
  update: Prisma.XOR<Prisma.OrdersItemsUpdateWithoutItemInput, Prisma.OrdersItemsUncheckedUpdateWithoutItemInput>
  create: Prisma.XOR<Prisma.OrdersItemsCreateWithoutItemInput, Prisma.OrdersItemsUncheckedCreateWithoutItemInput>
}

export type OrdersItemsUpdateWithWhereUniqueWithoutItemInput = {
  where: Prisma.OrdersItemsWhereUniqueInput
  data: Prisma.XOR<Prisma.OrdersItemsUpdateWithoutItemInput, Prisma.OrdersItemsUncheckedUpdateWithoutItemInput>
}

export type OrdersItemsUpdateManyWithWhereWithoutItemInput = {
  where: Prisma.OrdersItemsScalarWhereInput
  data: Prisma.XOR<Prisma.OrdersItemsUpdateManyMutationInput, Prisma.OrdersItemsUncheckedUpdateManyWithoutItemInput>
}

export type OrdersItemsScalarWhereInput = {
  AND?: Prisma.OrdersItemsScalarWhereInput | Prisma.OrdersItemsScalarWhereInput[]
  OR?: Prisma.OrdersItemsScalarWhereInput[]
  NOT?: Prisma.OrdersItemsScalarWhereInput | Prisma.OrdersItemsScalarWhereInput[]
  id?: Prisma.IntFilter<"OrdersItems"> | number
  itemId?: Prisma.IntFilter<"OrdersItems"> | number
  orderId?: Prisma.IntFilter<"OrdersItems"> | number
  priceAtOrder?: Prisma.FloatFilter<"OrdersItems"> | number
  nameAtOrder?: Prisma.StringFilter<"OrdersItems"> | string
  comment?: Prisma.StringNullableFilter<"OrdersItems"> | string | null
}

export type OrdersItemsCreateWithoutOrderInput = {
  priceAtOrder: number
  nameAtOrder: string
  comment?: string | null
  item: Prisma.MenuItemCreateNestedOneWithoutOrdersInput
}

export type OrdersItemsUncheckedCreateWithoutOrderInput = {
  id?: number
  itemId: number
  priceAtOrder: number
  nameAtOrder: string
  comment?: string | null
}

export type OrdersItemsCreateOrConnectWithoutOrderInput = {
  where: Prisma.OrdersItemsWhereUniqueInput
  create: Prisma.XOR<Prisma.OrdersItemsCreateWithoutOrderInput, Prisma.OrdersItemsUncheckedCreateWithoutOrderInput>
}

export type OrdersItemsCreateManyOrderInputEnvelope = {
  data: Prisma.OrdersItemsCreateManyOrderInput | Prisma.OrdersItemsCreateManyOrderInput[]
}

export type OrdersItemsUpsertWithWhereUniqueWithoutOrderInput = {
  where: Prisma.OrdersItemsWhereUniqueInput
  update: Prisma.XOR<Prisma.OrdersItemsUpdateWithoutOrderInput, Prisma.OrdersItemsUncheckedUpdateWithoutOrderInput>
  create: Prisma.XOR<Prisma.OrdersItemsCreateWithoutOrderInput, Prisma.OrdersItemsUncheckedCreateWithoutOrderInput>
}

export type OrdersItemsUpdateWithWhereUniqueWithoutOrderInput = {
  where: Prisma.OrdersItemsWhereUniqueInput
  data: Prisma.XOR<Prisma.OrdersItemsUpdateWithoutOrderInput, Prisma.OrdersItemsUncheckedUpdateWithoutOrderInput>
}

export type OrdersItemsUpdateManyWithWhereWithoutOrderInput = {
  where: Prisma.OrdersItemsScalarWhereInput
  data: Prisma.XOR<Prisma.OrdersItemsUpdateManyMutationInput, Prisma.OrdersItemsUncheckedUpdateManyWithoutOrderInput>
}

export type OrdersItemsCreateManyItemInput = {
  id?: number
  orderId: number
  priceAtOrder: number
  nameAtOrder: string
  comment?: string | null
}

export type OrdersItemsUpdateWithoutItemInput = {
  priceAtOrder?: Prisma.FloatFieldUpdateOperationsInput | number
  nameAtOrder?: Prisma.StringFieldUpdateOperationsInput | string
  comment?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  order?: Prisma.OrderUpdateOneRequiredWithoutOrderItemsNestedInput
}

export type OrdersItemsUncheckedUpdateWithoutItemInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  orderId?: Prisma.IntFieldUpdateOperationsInput | number
  priceAtOrder?: Prisma.FloatFieldUpdateOperationsInput | number
  nameAtOrder?: Prisma.StringFieldUpdateOperationsInput | string
  comment?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
}

export type OrdersItemsUncheckedUpdateManyWithoutItemInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  orderId?: Prisma.IntFieldUpdateOperationsInput | number
  priceAtOrder?: Prisma.FloatFieldUpdateOperationsInput | number
  nameAtOrder?: Prisma.StringFieldUpdateOperationsInput | string
  comment?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
}

export type OrdersItemsCreateManyOrderInput = {
  id?: number
  itemId: number
  priceAtOrder: number
  nameAtOrder: string
  comment?: string | null
}

export type OrdersItemsUpdateWithoutOrderInput = {
  priceAtOrder?: Prisma.FloatFieldUpdateOperationsInput | number
  nameAtOrder?: Prisma.StringFieldUpdateOperationsInput | string
  comment?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  item?: Prisma.MenuItemUpdateOneRequiredWithoutOrdersNestedInput
}

export type OrdersItemsUncheckedUpdateWithoutOrderInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  itemId?: Prisma.IntFieldUpdateOperationsInput | number
  priceAtOrder?: Prisma.FloatFieldUpdateOperationsInput | number
  nameAtOrder?: Prisma.StringFieldUpdateOperationsInput | string
  comment?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
}

export type OrdersItemsUncheckedUpdateManyWithoutOrderInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  itemId?: Prisma.IntFieldUpdateOperationsInput | number
  priceAtOrder?: Prisma.FloatFieldUpdateOperationsInput | number
  nameAtOrder?: Prisma.StringFieldUpdateOperationsInput | string
  comment?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
}



export type OrdersItemsSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  itemId?: boolean
  orderId?: boolean
  priceAtOrder?: boolean
  nameAtOrder?: boolean
  comment?: boolean
  item?: boolean | Prisma.MenuItemDefaultArgs<ExtArgs>
  order?: boolean | Prisma.OrderDefaultArgs<ExtArgs>
}, ExtArgs["result"]["ordersItems"]>

export type OrdersItemsSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  itemId?: boolean
  orderId?: boolean
  priceAtOrder?: boolean
  nameAtOrder?: boolean
  comment?: boolean
  item?: boolean | Prisma.MenuItemDefaultArgs<ExtArgs>
  order?: boolean | Prisma.OrderDefaultArgs<ExtArgs>
}, ExtArgs["result"]["ordersItems"]>

export type OrdersItemsSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  itemId?: boolean
  orderId?: boolean
  priceAtOrder?: boolean
  nameAtOrder?: boolean
  comment?: boolean
  item?: boolean | Prisma.MenuItemDefaultArgs<ExtArgs>
  order?: boolean | Prisma.OrderDefaultArgs<ExtArgs>
}, ExtArgs["result"]["ordersItems"]>

export type OrdersItemsSelectScalar = {
  id?: boolean
  itemId?: boolean
  orderId?: boolean
  priceAtOrder?: boolean
  nameAtOrder?: boolean
  comment?: boolean
}

export type OrdersItemsOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "itemId" | "orderId" | "priceAtOrder" | "nameAtOrder" | "comment", ExtArgs["result"]["ordersItems"]>
export type OrdersItemsInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  item?: boolean | Prisma.MenuItemDefaultArgs<ExtArgs>
  order?: boolean | Prisma.OrderDefaultArgs<ExtArgs>
}
export type OrdersItemsIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  item?: boolean | Prisma.MenuItemDefaultArgs<ExtArgs>
  order?: boolean | Prisma.OrderDefaultArgs<ExtArgs>
}
export type OrdersItemsIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  item?: boolean | Prisma.MenuItemDefaultArgs<ExtArgs>
  order?: boolean | Prisma.OrderDefaultArgs<ExtArgs>
}

export type $OrdersItemsPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "OrdersItems"
  objects: {
    item: Prisma.$MenuItemPayload<ExtArgs>
    order: Prisma.$OrderPayload<ExtArgs>
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: number
    itemId: number
    orderId: number
    priceAtOrder: number
    nameAtOrder: string
    comment: string | null
  }, ExtArgs["result"]["ordersItems"]>
  composites: {}
}

export type OrdersItemsGetPayload<S extends boolean | null | undefined | OrdersItemsDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$OrdersItemsPayload, S>

export type OrdersItemsCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<OrdersItemsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: OrdersItemsCountAggregateInputType | true
  }

export interface OrdersItemsDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['OrdersItems'], meta: { name: 'OrdersItems' } }
  /**
   * Find zero or one OrdersItems that matches the filter.
   * @param {OrdersItemsFindUniqueArgs} args - Arguments to find a OrdersItems
   * @example
   * // Get one OrdersItems
   * const ordersItems = await prisma.ordersItems.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends OrdersItemsFindUniqueArgs>(args: Prisma.SelectSubset<T, OrdersItemsFindUniqueArgs<ExtArgs>>): Prisma.Prisma__OrdersItemsClient<runtime.Types.Result.GetResult<Prisma.$OrdersItemsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one OrdersItems that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {OrdersItemsFindUniqueOrThrowArgs} args - Arguments to find a OrdersItems
   * @example
   * // Get one OrdersItems
   * const ordersItems = await prisma.ordersItems.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends OrdersItemsFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, OrdersItemsFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__OrdersItemsClient<runtime.Types.Result.GetResult<Prisma.$OrdersItemsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first OrdersItems that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {OrdersItemsFindFirstArgs} args - Arguments to find a OrdersItems
   * @example
   * // Get one OrdersItems
   * const ordersItems = await prisma.ordersItems.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends OrdersItemsFindFirstArgs>(args?: Prisma.SelectSubset<T, OrdersItemsFindFirstArgs<ExtArgs>>): Prisma.Prisma__OrdersItemsClient<runtime.Types.Result.GetResult<Prisma.$OrdersItemsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first OrdersItems that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {OrdersItemsFindFirstOrThrowArgs} args - Arguments to find a OrdersItems
   * @example
   * // Get one OrdersItems
   * const ordersItems = await prisma.ordersItems.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends OrdersItemsFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, OrdersItemsFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__OrdersItemsClient<runtime.Types.Result.GetResult<Prisma.$OrdersItemsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more OrdersItems that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {OrdersItemsFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all OrdersItems
   * const ordersItems = await prisma.ordersItems.findMany()
   * 
   * // Get first 10 OrdersItems
   * const ordersItems = await prisma.ordersItems.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const ordersItemsWithIdOnly = await prisma.ordersItems.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends OrdersItemsFindManyArgs>(args?: Prisma.SelectSubset<T, OrdersItemsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$OrdersItemsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a OrdersItems.
   * @param {OrdersItemsCreateArgs} args - Arguments to create a OrdersItems.
   * @example
   * // Create one OrdersItems
   * const OrdersItems = await prisma.ordersItems.create({
   *   data: {
   *     // ... data to create a OrdersItems
   *   }
   * })
   * 
   */
  create<T extends OrdersItemsCreateArgs>(args: Prisma.SelectSubset<T, OrdersItemsCreateArgs<ExtArgs>>): Prisma.Prisma__OrdersItemsClient<runtime.Types.Result.GetResult<Prisma.$OrdersItemsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many OrdersItems.
   * @param {OrdersItemsCreateManyArgs} args - Arguments to create many OrdersItems.
   * @example
   * // Create many OrdersItems
   * const ordersItems = await prisma.ordersItems.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends OrdersItemsCreateManyArgs>(args?: Prisma.SelectSubset<T, OrdersItemsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many OrdersItems and returns the data saved in the database.
   * @param {OrdersItemsCreateManyAndReturnArgs} args - Arguments to create many OrdersItems.
   * @example
   * // Create many OrdersItems
   * const ordersItems = await prisma.ordersItems.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many OrdersItems and only return the `id`
   * const ordersItemsWithIdOnly = await prisma.ordersItems.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends OrdersItemsCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, OrdersItemsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$OrdersItemsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a OrdersItems.
   * @param {OrdersItemsDeleteArgs} args - Arguments to delete one OrdersItems.
   * @example
   * // Delete one OrdersItems
   * const OrdersItems = await prisma.ordersItems.delete({
   *   where: {
   *     // ... filter to delete one OrdersItems
   *   }
   * })
   * 
   */
  delete<T extends OrdersItemsDeleteArgs>(args: Prisma.SelectSubset<T, OrdersItemsDeleteArgs<ExtArgs>>): Prisma.Prisma__OrdersItemsClient<runtime.Types.Result.GetResult<Prisma.$OrdersItemsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one OrdersItems.
   * @param {OrdersItemsUpdateArgs} args - Arguments to update one OrdersItems.
   * @example
   * // Update one OrdersItems
   * const ordersItems = await prisma.ordersItems.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends OrdersItemsUpdateArgs>(args: Prisma.SelectSubset<T, OrdersItemsUpdateArgs<ExtArgs>>): Prisma.Prisma__OrdersItemsClient<runtime.Types.Result.GetResult<Prisma.$OrdersItemsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more OrdersItems.
   * @param {OrdersItemsDeleteManyArgs} args - Arguments to filter OrdersItems to delete.
   * @example
   * // Delete a few OrdersItems
   * const { count } = await prisma.ordersItems.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends OrdersItemsDeleteManyArgs>(args?: Prisma.SelectSubset<T, OrdersItemsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more OrdersItems.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {OrdersItemsUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many OrdersItems
   * const ordersItems = await prisma.ordersItems.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends OrdersItemsUpdateManyArgs>(args: Prisma.SelectSubset<T, OrdersItemsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more OrdersItems and returns the data updated in the database.
   * @param {OrdersItemsUpdateManyAndReturnArgs} args - Arguments to update many OrdersItems.
   * @example
   * // Update many OrdersItems
   * const ordersItems = await prisma.ordersItems.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more OrdersItems and only return the `id`
   * const ordersItemsWithIdOnly = await prisma.ordersItems.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends OrdersItemsUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, OrdersItemsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$OrdersItemsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one OrdersItems.
   * @param {OrdersItemsUpsertArgs} args - Arguments to update or create a OrdersItems.
   * @example
   * // Update or create a OrdersItems
   * const ordersItems = await prisma.ordersItems.upsert({
   *   create: {
   *     // ... data to create a OrdersItems
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the OrdersItems we want to update
   *   }
   * })
   */
  upsert<T extends OrdersItemsUpsertArgs>(args: Prisma.SelectSubset<T, OrdersItemsUpsertArgs<ExtArgs>>): Prisma.Prisma__OrdersItemsClient<runtime.Types.Result.GetResult<Prisma.$OrdersItemsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of OrdersItems.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {OrdersItemsCountArgs} args - Arguments to filter OrdersItems to count.
   * @example
   * // Count the number of OrdersItems
   * const count = await prisma.ordersItems.count({
   *   where: {
   *     // ... the filter for the OrdersItems we want to count
   *   }
   * })
  **/
  count<T extends OrdersItemsCountArgs>(
    args?: Prisma.Subset<T, OrdersItemsCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], OrdersItemsCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a OrdersItems.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {OrdersItemsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends OrdersItemsAggregateArgs>(args: Prisma.Subset<T, OrdersItemsAggregateArgs>): Prisma.PrismaPromise<GetOrdersItemsAggregateType<T>>

  /**
   * Group by OrdersItems.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {OrdersItemsGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends OrdersItemsGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: OrdersItemsGroupByArgs['orderBy'] }
      : { orderBy?: OrdersItemsGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, OrdersItemsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetOrdersItemsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the OrdersItems model
 */
readonly fields: OrdersItemsFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for OrdersItems.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__OrdersItemsClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  item<T extends Prisma.MenuItemDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.MenuItemDefaultArgs<ExtArgs>>): Prisma.Prisma__MenuItemClient<runtime.Types.Result.GetResult<Prisma.$MenuItemPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  order<T extends Prisma.OrderDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.OrderDefaultArgs<ExtArgs>>): Prisma.Prisma__OrderClient<runtime.Types.Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the OrdersItems model
 */
export interface OrdersItemsFieldRefs {
  readonly id: Prisma.FieldRef<"OrdersItems", 'Int'>
  readonly itemId: Prisma.FieldRef<"OrdersItems", 'Int'>
  readonly orderId: Prisma.FieldRef<"OrdersItems", 'Int'>
  readonly priceAtOrder: Prisma.FieldRef<"OrdersItems", 'Float'>
  readonly nameAtOrder: Prisma.FieldRef<"OrdersItems", 'String'>
  readonly comment: Prisma.FieldRef<"OrdersItems", 'String'>
}
    

// Custom InputTypes
/**
 * OrdersItems findUnique
 */
export type OrdersItemsFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the OrdersItems
   */
  select?: Prisma.OrdersItemsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the OrdersItems
   */
  omit?: Prisma.OrdersItemsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OrdersItemsInclude<ExtArgs> | null
  /**
   * Filter, which OrdersItems to fetch.
   */
  where: Prisma.OrdersItemsWhereUniqueInput
}

/**
 * OrdersItems findUniqueOrThrow
 */
export type OrdersItemsFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the OrdersItems
   */
  select?: Prisma.OrdersItemsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the OrdersItems
   */
  omit?: Prisma.OrdersItemsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OrdersItemsInclude<ExtArgs> | null
  /**
   * Filter, which OrdersItems to fetch.
   */
  where: Prisma.OrdersItemsWhereUniqueInput
}

/**
 * OrdersItems findFirst
 */
export type OrdersItemsFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the OrdersItems
   */
  select?: Prisma.OrdersItemsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the OrdersItems
   */
  omit?: Prisma.OrdersItemsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OrdersItemsInclude<ExtArgs> | null
  /**
   * Filter, which OrdersItems to fetch.
   */
  where?: Prisma.OrdersItemsWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of OrdersItems to fetch.
   */
  orderBy?: Prisma.OrdersItemsOrderByWithRelationInput | Prisma.OrdersItemsOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for OrdersItems.
   */
  cursor?: Prisma.OrdersItemsWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` OrdersItems from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` OrdersItems.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of OrdersItems.
   */
  distinct?: Prisma.OrdersItemsScalarFieldEnum | Prisma.OrdersItemsScalarFieldEnum[]
}

/**
 * OrdersItems findFirstOrThrow
 */
export type OrdersItemsFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the OrdersItems
   */
  select?: Prisma.OrdersItemsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the OrdersItems
   */
  omit?: Prisma.OrdersItemsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OrdersItemsInclude<ExtArgs> | null
  /**
   * Filter, which OrdersItems to fetch.
   */
  where?: Prisma.OrdersItemsWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of OrdersItems to fetch.
   */
  orderBy?: Prisma.OrdersItemsOrderByWithRelationInput | Prisma.OrdersItemsOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for OrdersItems.
   */
  cursor?: Prisma.OrdersItemsWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` OrdersItems from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` OrdersItems.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of OrdersItems.
   */
  distinct?: Prisma.OrdersItemsScalarFieldEnum | Prisma.OrdersItemsScalarFieldEnum[]
}

/**
 * OrdersItems findMany
 */
export type OrdersItemsFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the OrdersItems
   */
  select?: Prisma.OrdersItemsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the OrdersItems
   */
  omit?: Prisma.OrdersItemsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OrdersItemsInclude<ExtArgs> | null
  /**
   * Filter, which OrdersItems to fetch.
   */
  where?: Prisma.OrdersItemsWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of OrdersItems to fetch.
   */
  orderBy?: Prisma.OrdersItemsOrderByWithRelationInput | Prisma.OrdersItemsOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing OrdersItems.
   */
  cursor?: Prisma.OrdersItemsWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` OrdersItems from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` OrdersItems.
   */
  skip?: number
  distinct?: Prisma.OrdersItemsScalarFieldEnum | Prisma.OrdersItemsScalarFieldEnum[]
}

/**
 * OrdersItems create
 */
export type OrdersItemsCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the OrdersItems
   */
  select?: Prisma.OrdersItemsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the OrdersItems
   */
  omit?: Prisma.OrdersItemsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OrdersItemsInclude<ExtArgs> | null
  /**
   * The data needed to create a OrdersItems.
   */
  data: Prisma.XOR<Prisma.OrdersItemsCreateInput, Prisma.OrdersItemsUncheckedCreateInput>
}

/**
 * OrdersItems createMany
 */
export type OrdersItemsCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many OrdersItems.
   */
  data: Prisma.OrdersItemsCreateManyInput | Prisma.OrdersItemsCreateManyInput[]
}

/**
 * OrdersItems createManyAndReturn
 */
export type OrdersItemsCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the OrdersItems
   */
  select?: Prisma.OrdersItemsSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the OrdersItems
   */
  omit?: Prisma.OrdersItemsOmit<ExtArgs> | null
  /**
   * The data used to create many OrdersItems.
   */
  data: Prisma.OrdersItemsCreateManyInput | Prisma.OrdersItemsCreateManyInput[]
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OrdersItemsIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * OrdersItems update
 */
export type OrdersItemsUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the OrdersItems
   */
  select?: Prisma.OrdersItemsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the OrdersItems
   */
  omit?: Prisma.OrdersItemsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OrdersItemsInclude<ExtArgs> | null
  /**
   * The data needed to update a OrdersItems.
   */
  data: Prisma.XOR<Prisma.OrdersItemsUpdateInput, Prisma.OrdersItemsUncheckedUpdateInput>
  /**
   * Choose, which OrdersItems to update.
   */
  where: Prisma.OrdersItemsWhereUniqueInput
}

/**
 * OrdersItems updateMany
 */
export type OrdersItemsUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update OrdersItems.
   */
  data: Prisma.XOR<Prisma.OrdersItemsUpdateManyMutationInput, Prisma.OrdersItemsUncheckedUpdateManyInput>
  /**
   * Filter which OrdersItems to update
   */
  where?: Prisma.OrdersItemsWhereInput
  /**
   * Limit how many OrdersItems to update.
   */
  limit?: number
}

/**
 * OrdersItems updateManyAndReturn
 */
export type OrdersItemsUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the OrdersItems
   */
  select?: Prisma.OrdersItemsSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the OrdersItems
   */
  omit?: Prisma.OrdersItemsOmit<ExtArgs> | null
  /**
   * The data used to update OrdersItems.
   */
  data: Prisma.XOR<Prisma.OrdersItemsUpdateManyMutationInput, Prisma.OrdersItemsUncheckedUpdateManyInput>
  /**
   * Filter which OrdersItems to update
   */
  where?: Prisma.OrdersItemsWhereInput
  /**
   * Limit how many OrdersItems to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OrdersItemsIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * OrdersItems upsert
 */
export type OrdersItemsUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the OrdersItems
   */
  select?: Prisma.OrdersItemsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the OrdersItems
   */
  omit?: Prisma.OrdersItemsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OrdersItemsInclude<ExtArgs> | null
  /**
   * The filter to search for the OrdersItems to update in case it exists.
   */
  where: Prisma.OrdersItemsWhereUniqueInput
  /**
   * In case the OrdersItems found by the `where` argument doesn't exist, create a new OrdersItems with this data.
   */
  create: Prisma.XOR<Prisma.OrdersItemsCreateInput, Prisma.OrdersItemsUncheckedCreateInput>
  /**
   * In case the OrdersItems was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.OrdersItemsUpdateInput, Prisma.OrdersItemsUncheckedUpdateInput>
}

/**
 * OrdersItems delete
 */
export type OrdersItemsDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the OrdersItems
   */
  select?: Prisma.OrdersItemsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the OrdersItems
   */
  omit?: Prisma.OrdersItemsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OrdersItemsInclude<ExtArgs> | null
  /**
   * Filter which OrdersItems to delete.
   */
  where: Prisma.OrdersItemsWhereUniqueInput
}

/**
 * OrdersItems deleteMany
 */
export type OrdersItemsDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which OrdersItems to delete
   */
  where?: Prisma.OrdersItemsWhereInput
  /**
   * Limit how many OrdersItems to delete.
   */
  limit?: number
}

/**
 * OrdersItems without action
 */
export type OrdersItemsDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the OrdersItems
   */
  select?: Prisma.OrdersItemsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the OrdersItems
   */
  omit?: Prisma.OrdersItemsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OrdersItemsInclude<ExtArgs> | null
}
